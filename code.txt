Bisection


#include <stdio.h>
#include <math.h>
#define f(x) (x*x*x-2*x-5)
#define E 0.001 
int main(){
	float x,x0,x1,error;
	here : printf("Input initial guesses");
	scanf("%f%f",&x0,&x1);
	
	if(f(x0)*f(x1)>0){
		printf("invalid error\n");
		goto here;
	}
	do{
		x= (x0+x1)/2;
		error = fabs(x1-x0);
		if(f(x)*f(x0)<0){
			x1=x;
		}
		else{
			x0=x;
		}	
	}while(error>E);
	printf("The approximiated root is : %f",x);
	
	
	return 0;
}


-->> 2, 3


Regular Falsi 



#include <stdio.h>
#include <math.h>
#define f(x) (x*x*x-2*x-5)
#define E 0.001
int main(){
	
	float x0,x1,x2,error;
	here:printf("Input two initial guesses:\n");
	scanf("%f%f",&x0,&x1);
	if(f(x0)*f(x1)>0){
		printf("Invalid input\n");
		goto here;
	}
	do{
		x2 = x0 - ((f(x0)*(x1-x0))/(f(x1)-f(x0)));
		error = fabs(f(x2));
		if(f(x0)*f(x2)<0){
			x1=x2;
		}
		else{
			x0 = x2;
		}	
	}while(error>E);
	printf("The root is : %f",x2);
	
	
	
	return 0;
}


--> 2,3


Newton Rhapson Method

#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define f(x) (x*x*x-13)
#define g(x) (3*x*x)
#define E 0.0001
int main(){
	
	float x0,x1,error;
	here: printf("Enter the initial guess:\n");
	scanf("%f",&x0);
	if(g(x0)==0){
		printf("Invalid input :\n");
		goto here;
	}
	do{
		x1 = x0 - (f(x0)/g(x0));
		error = fabs((x1-x0)/x1);
		x0=x1;
		if(g(x0)==0){
			printf("The root cannot be converged");
			exit(1);
		}	
	}while(error>E);
	printf("The approximiated root is : %f ",x1);
	

	
	return 0;
}



--> 1

Secant 


#include <stdio.h>
#include <math.h>
#define f(x) ((x*x*x)+(x*x)-x+4)
#define E 0.001

int main(){
	
	float x1,x2,x3,error;
	printf("Input initial guesses:\n");
	scanf("%f%f",&x1,&x2);
	do{
		x3 = x2 - ((f(x2)*(x2-x1))/(f(x2)-f(x1)));
		error = fabs((x3-x2)/x3);
		x1=x2;
		x2=x3;
	}while(error>E);
	printf("The approximiated root is :%f",x3);
	return 0;
}


--> 2, 3


Fixed point iteration


#include <stdio.h>
#include <math.h>
#define f(x) ((5/x+x)/2)
#define E 0.0001

int main(){
	float x0,x1,error;
	printf("Enter the initial guess:\n");
	scanf("%f",&x0);
	do{
		x1=f(x0);
		error = fabs((x1-x0)/x1);
		x0=x1;
	}while(error>E);
	printf("The approxomiated root is : %f",x1);
	return 0;
}  


-->1


Herners 



#include<stdio.h>
#include<math.h>

int main(){
	int a[10],b[10],x0,n,i;
	printf("Enter the order of polynomial:\n");
	scanf("%d",&n);
	printf("Enter the point of evaluation:\n");
	scanf("%d",&x0);
	for(i=0;i<=n;i++){
		printf("Enter a[%d]:\n",i);
		scanf("%d",&a[i]);
	}
	b[n] = a[n];
	for(i=n;i>=0;i--){
		b[i-1] = a[i-1] + b[i] * x0;
	}
	printf("The required polynomial value is: %d",b[0]);
	return 0;
}


--> order 3 , point 1, data : 1 -1 0 1 


lagrange

#include<stdio.h>
int main(){
	int i,j,n;
	float sum=0,term,x[10],y[10],p,l[10];
	printf("Enter the no of segments:\n");
	scanf("%d",&n);
	for(i=0;i<n;i++){
		printf("Enter x[%d]:\n",i);
		scanf("%f",&x[i]);
		printf("Enter y[%d]:\n",i);
		scanf("%f",&y[i]);
	}
	printf("Enter the point of evaluation:\n");
	scanf("%f",&p);
	for(i=0;i<n;i++){
		term = 1.0;
		for(j=0;j<n;j++){
			if(j!=i){
				term = term * ((p-x[j])/(x[i]-x[j]));
			}
			l[i]= term;
		}
	}
	for(i=0;i<n;i++){
		sum = sum + (l[i]*y[i]);
	}
	printf("The required solution is: %f",sum);
	return 0;
}

Output:

Enter the no of segments:
4
Enter x[0]:
2
Enter y[0]:
40
Enter x[1]:
3
Enter y[1]:
55
Enter x[2]:
4
Enter y[2]:
68
Enter x[3]:
6
Enter y[3]:
78
Enter the point of evaluation:
5
The required solution is: 76.500000


least square

#include<stdio.h>
int main(){
	int i,n;
	float a,b,sumx=0,sumy=0,sumxy=0,sumx2=0,x[10],y[10];
	printf("Input the no of set ofdata:\n");
	scanf("%d",&n);
	for(i=0;i<n;i++){
		printf("Enter x[%d]:\n",i);
		scanf("%f",&x[i]);
		printf("Enter y[%d]:\n",i);
		scanf("%f",&y[i]);
		
	}
		
	for(i=0;i<n;i++){
		sumx = sumx + x[i];
		sumy = sumy + y[i];
		sumxy = sumxy + (x[i]*y[i]);
		sumx2 = sumx2 + (x[i]*x[i]);
	}
	b = ((n*sumxy) - (sumx*sumy))/((n*sumx2)-(sumx*sumx));
	a = (sumy/n)-(b*sumx/n);
	 
	printf("The fit line is : y=%f + %fx",a,b);
	return 0;
	
}


--> data set 5
1  2 3 4 5 
3 4 5 6 8

three point


#include<stdio.h>
#include<math.h>
#define f(x) 2*(x)*(x)+1
#define h 0.1
int main(){
	float p,f1,f2;
	printf("Enter point of evaluation:\n");
	scanf("%f",&p);
	f1 = ((f(p+h))-(f(p-h)))/(2*h);
	f2 = ((f(p+h)) - (2*f(p)) + (f(p-h)))/(h*h);
	printf("First derivative is :%f and the second derivative is: %f",f1,f2);
	return 0;
}




Output:

Enter point of evaluation:
2
First derivative is :8.000000 and the second derivative is: 104.000000

trapezoidal

#include<stdio.h>
#include<conio.h>
#define f(x) (1/(1+x*x))
int main(){
	int i,n;
	float a,b,x[10],y[10],IV,h;
	printf("Enter the lower limit ,a :");
	scanf("%f",&a);
	printf("Enter the upper limit ,b :");
	scanf("%f",&b);
	printf("Enter the no of segments ,n :");
	scanf("%d",&n);
	h = (b-a)/n;
	IV = f(a) + f(b);
	x[0] = a;
	for(i=1;i<n;i++){
		x[i] = x[i-1] + h;
		y[i] = f(x[i]);
	}
	for(i=1;i<n;i++){
		IV = IV + 2*y[i];
	}
	IV = IV * (h/2);
	printf("The required result is:%f",IV);
	return 0;
}


1/3

#include<stdio.h>
#include<conio.h>
#define f(x) (1/(1+x*x))
int main(){
	int i,n;
	float a,b,x[10],y[10],IV,h;
	printf("Enter the lower limit ,a :");
	scanf("%f",&a);
	printf("Enter the upper limit ,b :");
	scanf("%f",&b);
	printf("Enter the no of segments ,n :");
	scanf("%d",&n);
	h = (b-a)/n;
	IV = f(a) + f(b);
	x[0] = a;
	for(i=1;i<n;i++){
		x[i] = x[i-1] + h;
		y[i] = f(x[i]);
	}
	for(i=1;i<n;i++){
		if(i%2==0){
			IV = IV + 2*y[i];
		}else{
			IV = IV + 4*y[i];
		}
	}
	IV = IV * (h/3);
	printf("The required result is: %f",IV);
	return 0;
}

3/8

#include<stdio.h>
#include<conio.h>
#define f(x) (1/(1+x*x))
int main(){
	int i,n;
	float a,b,x[10],y[10],IV,h;
	printf("Enter the lower limit ,a :");
	scanf("%f",&a);
	printf("Enter the upper limit ,b :");
	scanf("%f",&b);
	printf("Enter the no of segments ,n :");
	scanf("%d",&n);
	h = (b-a)/n;
	IV = f(a) + f(b);
	x[0] = a;
	for(i=1;i<n;i++){
		x[i] = x[i-1] + h;
		y[i] = f(x[i]);
	}
	for(i=1;i<n;i++){
		if(i%3==0){
			IV = IV + 2*y[i];
		}else{
			IV = IV + 3*y[i];
		}
	}
	IV = IV * ((3*h)/8);
	printf("The required result is: %f",IV);
	return 0;
}


eulers


#include<stdio.h>
#include<conio.h>
#define f(x,y) ((x*x)+(y*y));
int main(){
	float a,b,x,y,h,p,m;
	printf("Enter x0:");
	scanf("%f",&a);
	printf("Enter Y0:");
	scanf("%f",&b);
	printf("enter h:");
	scanf("%f",&h);
	printf("Enter point of evaluation");
	scanf("%f",&p);
	x=a;
	y=b;
	do{
		m = f(x,y);
		x = x + h;
		y = y + (m*h);
		
	}while(x<p);
	printf("The result is : %f",y);
	return 0;
}


--> 0 , 0, 0.2, 0.8

rk


#include<stdio.h>
#include<conio.h>
#define f(x,y) (x*x)+(y*y)

int main(){
	float a,b,x,y,h,p,m1,m2,m3,m4,m;
	printf("Enter x0:");
	scanf("%f",&a);
	printf("Enter Y0:");
	scanf("%f",&b);
	printf("Enter h:");
	scanf("%f",&h);
	printf("Enter point of evaluation");
	scanf("%f",&p);
	x=a;
	y=b;
	while(x<p){
		m1 = f(x,y);
		m2 = f(x+(h/2.0),y+((m1*h)/2.0));
		m3 = f(x+(h/2.0),y+((m2*h)/2.0));
		m4 = f(x+h,y+(m3*h));
		m = (m1 + (2.0*m2) + (2.0*m3) + m4)/6.0;
		x = x + h;
		y = y + (m*h);
		
	}
	printf("The result is : %f",y);
	return 0;
}


Output:


Enter x0:0
Enter Y0:0
Enter h:0.5
Enter point of evaluation1
The result is : 0.758624





gauss seidal


#include<stdio.h>
#include<math.h>

int main(){
	int i,n,j;
	float sum=0,error,E[10],a[10][10],b[10],new_x[10],old_x[10];
	printf("Enter the dimension of system of equation:\n");
	scanf("%d",&n);
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			printf("Enter [%d][%d]",i,j);
			scanf("%f",&a[i][j]);
		}
	
	}
	printf("Enter vector B:\n");
	for(i=0;i<n;i++){
		scanf("%f",&b[i]);
	}
	printf("Enter accuracy limit:\n");
	scanf("%f",&error);
	for(i=0;i<n;i++){
		new_x[i]=0;
	}
	while(1){
		for(i=0;i<n;i++){
			sum = b[i];
			for(j=0;j<n;j++){
				if(i!=j){
					sum = sum - (a[i][j]*new_x[j]);
				}
			}
			old_x[i] = new_x[i];
			new_x[i] = sum/a[i][j];
			E[i] = fabs(new_x[i] - old_x[i])/fabs(new_x[i]);
		}
	
		for(i=0;i<n;i++){
			if(E[i]>error){
				break;
			}
		}
		if(i==n)
			break;
		else
			continue;
	}		
	printf("Solution is:\n");
	for(i=0;i<n;i++){
		printf("x%d=.2%f\n",i+1,new_x[i]);
	}	
		

	return 0;
}


Output:

Enter the dimension of system of equation:
3
Enter [0][0]2
Enter [0][1]1
Enter [0][2]1
Enter [1][0]3
Enter [1][1]5
Enter [1][2]2
Enter [2][0]2
Enter [2][1]1
Enter [2][2]4
Enter vector B:
5
15
8
Enter accuracy limit:
0.01
Solution is:
x1=1.00
x2=2.00
x3=1.00